/** \page install_section Installation
    
    \section installdir_subsect Installation instructions

    \o2 installation is generally similar to that for GNU-style
    libraries. The file \c INSTALL has some details on this procedure.
    Generally, you should be able to run <tt>./configure</tt> and then
    type \c make and \c make \c install. More information on the \c
    configure command can also be obtained from <tt>./configure
    --help</tt>. \o2 assumes some C++11 support, typically that which
    was supported in gcc-4.4.7 and higher. The <tt>./configure</tt>
    script attempts to determine the proper compiler flags for C++11
    support, e.g. <tt>-std=gnu++11</tt>. If this fails, you may have
    to add the proper C++11 flag to the <tt>CXXFLAGS</tt> environment
    variable manually before the <tt>./configure</tt> script. The
    documentation is included in the \o2 release distribution and
    automatically installed by \c make \c install.

    \o2 requires the Boost (any relatively recent version) and the GSL
    libraries (version 1.16 or later). If the <tt>configure</tt>
    script cannot find Boost or GSL, you may have to specify their
    location in the <tt>CXXFLAGS</tt> and <tt>LDFLAGS</tt> environment
    variables (<tt>./configure --help</tt> shows some information on
    this). In order to allow \o2 to take advantage of new
    functionality in GSL versions 2.0 and later, you can add
    <tt>--enable-gsl2</tt> to the <tt>./configure</tt> script.
    Along with GSL, a CBLAS library is also required, and
    <tt>./configure</tt> will look for <tt>libcblas</tt> first, and if
    not found then it will look for <tt>libgslcblas</tt>. If neither
    is present, then you may have to manually specify a CBLAS library
    using the <tt>LIBS</tt> and <tt>LDFLAGS</tt> environment
    variables.

    Compiling with the readline and HDF5 libraries is optional, but
    they are assumed to be present by default. To compile without
    these libraries, you will need to use the arguments
    <tt>--disable-readline</tt> or <tt>--disable-hdf</tt> to
    <tt>./configure</tt>, respectively. Note that HDF5 is currently
    required for the physics sub-libraries, so <tt>--disable-hdf</tt>
    should be accompanied by the <tt>--disable-eoslib</tt> and
    <tt>--disable-partlib</tt> flags.

    After \c make \c install, you may test the library with \c make \c
    check or \c make \c o2scl-test. At the end, the phrase <tt>"All
    O2scl tests passed"</tt> indicates that the testing was
    successful. You may also run \c make \c o2scl-test in the
    individual subdirectories of the src directory to individually
    test the classes and functions in that part of \o2. The testing
    code in <tt>src/base/lib_settings_ts.cpp</tt> can be useful in
    finding out how \o2 was compiled. After <tt>make o2scl-test</tt>,
    running <tt>src/base/lib_settings_ts</tt> will output several of
    the installation settings.

    \o2 uses Travis CI (see https://travis-ci.org/awsteiner/o2scl ) to
    ensure that compilation and testing works on standard
    Ubuntu and Mac OS X environments.
    <img src="https://travis-ci.org/awsteiner/o2scl.svg?branch=master">
    
    \section installlinux_subsect Compiling on Linux

    For example, to install \o2 on Ubuntu, begin by installing g++,
    GSL (the <tt>libgsl0-dev</tt> package), Boost (the
    <tt>libboost-all-dev</tt> package), GNU readline (the
    <tt>libreadline-dev</tt> and <tt>libncurses-dev</tt> packages),
    and HDF5 the <tt>libhdf5-dev</tt> package). In older versions of
    Ubuntu, the HDF5 package only supports the older (and now
    deprecated) HDF5 API. If you get HDF5 errors you may have to
    install HDF5 from source. You can then install \o2 from one of the
    release distributions by using the standard GNU
    <tt>./configure</tt> script and then invoking <tt>make</tt> and
    <tt>make install</tt>.

    If you want to install from source (without generating the
    documentation), then you must first install the
    <tt>autoconf</tt> and <tt>libtool</tt> packages.
    Then you can use something along the lines of
    \code
    git clone https://github.com/awsteiner/o2scl
    mkdir m4
    autoreconf -i
    ./configure
    \endcode
    Then, you will either need to generate the documentation from
    doxygen using <tt>make o2scl-doc</tt> or use <tt>make
    blank-doc</tt> to create blank documentation. Then you can proceed
    using <tt>make</tt> and <tt>make install</tt>.

    \section installmac_subsect Compiling on Mac OS X

    The easiest way to perform compilation on Mac OS X is 
    with homebrew. Use:

    \code
    brew tap awsteiner/science
    brew install o2scl
    \endcode

    to install \o2 . There are a few options for <tt>brew
    install</tt>. The option <tt>--with-check</tt> performs the
    build-time tests and the option <tt>--with-examples</tt> double
    checks that the examples can also be compiled and executed. The
    homebrew recipe for \o2 uses the Mac OS X compiler clang.
    Homebrew also supports the installation of the current version
    directly from the repository using the <tt>--HEAD</tt> option
    to <tt>brew install</tt>.

    Alternatively, it is also possible to install directly from source
    with the <tt>./configure</tt> script as described above.

    \section installopt_subsect Optional linear algebra libraries

    Most classes and functions which require linear algebra can be
    used with the Eigen (http://eigen.tuxfamily.org) or Armadillo
    (http://arma.sourceforge.net) vector and matrix objects. This can
    be specified in the <tt>configure</tt> command with
    <tt>--enable-armadillo</tt> or <tt>--enable-eigen</tt>. Note that
    the \o2 classes which use Armadillo use matrix decompositions so
    Armadillo must be compiled with LAPACK support, and you may need
    to specify the location of the LAPACK libraries manually.
    If you are installing on Mac OS X with homebrew, the
    options <tt>--with-eigen</tt> and <tt>with-armadillo</tt> can
    be used.

    \section installrange_subsect Range-checking

    Range-checking for vectors and matrices is turned on by default.
    You can disable range-checking by defining -DO2SCL_NO_RANGE_CHECK,
    e.g. 

    \code
    CXXFLAGS="-DO2SCL_NO_RANGE_CHECK" ./configure
    \endcode

    \section installphys_subsect Optional physics libraries

    The separate libraries \o2e and \o2p are installed by default. To
    disable the installation of these libraries and their associated
    documentation, run <tt>./configure</tt> with the flags \c
    --disable-eoslib or \c --disable-partlib.  Note that \o2e depends
    on \o2p so using \c --disable-partlib without \c --disable-eoslib
    will not work. Note also that both \o2p and \o2e require
    HDF5 support. 

    \section installflags_subsect More configure flags

    There are several warning flags that are useful when configuring
    and compiling with \o2. See the GSL documentation for an 
    excellent discussion, and also see the generic installation
    documentation in the file <tt>INSTALL</tt> in the \o2 top-level 
    directory. For running \c configure, for example, if you do
    not have privileges to write to <tt>/usr/local</tt>,

    \code
    CPPFLAGS="-O3 -I/home/asteiner/install/include" \
    LDFLAGS="-L/home/asteiner/install/lib" ./configure \
    --prefix=/home/asteiner/install
    \endcode
    In this example, specifying
    <tt>-I/home/asteiner/install/include</tt> and
    <tt>-L/home/asteiner/install/lib</tt> above ensures that the GSL
    libraries can be found (this is where they are installed on my
    machine). The <tt>--prefix=/home/asteiner/install</tt> argument to
    <tt>./configure</tt> ensures that \o2 is installed there as well.

    \section installdoxygen_subsect Generation of documentation

    The \o2 documentation is generated with \doxygen and packaged in
    with every release file. In principle, the documentation can be
    regenerated by the end-user, but this is not supported and
    requires several external applications not included in the
    distribution.

    The most recent release documentation is available at
    http://web.utk.edu/~asteine1/o2scl . The documentation for
    previous releases is not on the web, but still available in the
    release <tt>.tar.gz</tt> file.

    \section uninstall_subsect Uninstallation

    While there is no explicit "uninstall" makefile target, there are
    only a couple places to check. Installation creates directories
    named <tt>o2scl</tt> in the include, doc and shared files
    directory (which default to \c /usr/local/include, \c
    /usr/local/doc, and \c /usr/local/share) which can be removed. The
    <tt>acol</tt> command-line utility is installed to \c
    /usr/local/bin . Finally, all of the libraries are named with the
    prefix \c libo2scl and are created by default in /usr/local/lib.
*/
