/** \page install_section Installation
    
    \o2 installation is generally the same as that for other GNU
    libraries. The file \c INSTALL has some details on this procedure.
    Generally, you should be able to run <tt>./configure</tt> and then
    type \c make and \c make \c install. More information on the \c
    configure command can also be obtained from <tt>./configure
    --help</tt>. \o2 requires Boost and the GSL library. If the
    <tt>configure</tt> script cannot find Boost or GSL, you may have
    to specify their location in the <tt>CPPFLAGS</tt> and
    <tt>LDFLAGS</tt> environment variables (<tt>./configure
    --help</tt> shows some information on this). The documentation is
    included in the distribution and automatically installed by \c
    make \c install.

    After \c make \c install, you may test the library with \c make \c
    o2scl-test. At the end, the phrase <tt>All O2scl tests passed</tt>
    indicates that the testing was successful. You may also run \c
    make \c o2scl-test in the individual subdirectories of the src
    directory to individually test the classes and functions in that
    part of \o2. Note that <tt>make check</tt> will not work. The
    testing code in <tt>src/base/lib_settings_ts.cpp</tt> can be
    useful in finding out how \o2 was compiled. After <tt>make
    o2scl-test</tt>, running <tt>src/base/lib_settings_ts</tt> will
    output several of the installation settings.

    \comment 
    This ensures that the URLs fit in the PDF documentation
    \endcomment
    \latexonly
    \sloppy
    \endlatexonly

    This library requires GSL and is designed to work with GSL
    versions 1.16 or greater, which can be obtained from
    http://www.gnu.org/software/gsl . Some classes may work with older
    versions of GSL, but this cannot be guaranteed. A CBLAS library is
    also required, and <tt>./configure</tt> will look for
    <tt>libcblas</tt> first, and if not found then it will look for
    <tt>libgslcblas</tt>. If neither is present, then you may have to
    manually specify a CBLAS library using the <tt>LIBS</tt> and
    <tt>LDFLAGS</tt> environment variables.

    Most classes and functions which require linear algebra can be
    used with the Eigen (http://eigen.tuxfamily.org) or Armadillo
    (http://arma.sourceforge.net) vector and matrix objects. This can
    be specified in the <tt>configure</tt> command with
    <tt>--enable-armadillo</tt> or <tt>--enable-eigen</tt>. Note that
    the \o2 classes which use Armadillo use matrix decompositions so
    Armadillo must be compiled with LAPACK support, and you may need
    to specify the location of the LAPACK libraries manually.

    File I/O is handled using the HDF5 library, which can be obtained
    from http://www.hdfgroup.org . To compile \o2 without HDF support,
    use the argument <tt>--disable-hdf</tt> to <tt>configure</tt>
    during installation. If HDF5 is not located in a typical location
    for your system, in order to compile \o2 with HDF support you may
    have to specify the location of the HDF header files and libraries
    with the <tt>-I</tt> and <tt>-L</tt> flags. Some \o2 functions use
    the high-level HDF routines found in the \c hdf5_hl library, but
    this library is usually in the same location as the base hdf5
    library.

    \o2 assumes some c++11 support, and if this is not available,
    then the user should give the --disable-cpp11 flag to the
    configure script and -DO2SCL_NO_CPP11 should be defined
    when using \o2 header files.

    Range-checking for vectors and matrices is turned on by default.
    You can disable range-checking by defining -DO2SCL_NO_RANGE_CHECK,
    e.g. 

    \code
    CPPFLAGS="-DO2SCL_NO_RANGE_CHECK" ./configure
    \endcode

    The separate libraries \o2e and \o2p are installed by default. To
    disable the installation of these libraries and their associated
    documentation, run <tt>./configure</tt> with the flags \c
    --disable-eoslib or \c --disable-partlib.  Note that \o2e depends
    on \o2p so using \c --disable-partlib without \c --disable-eoslib
    will not work. Note also that both \o2p and \o2e require
    HDF5 support. 

    There are several warning flags that are useful when configuring
    and compiling with \o2. See the GSL documentation for an 
    excellent discussion, and also see the generic installation
    documentation in the file <tt>INSTALL</tt> in the \o2 top-level 
    directory. For running \c configure, for example, if you do
    not have privileges to write to <tt>/usr/local</tt>,

    \code
    CPPFLAGS="-O3 -I/home/asteiner/install/include" \
    LDFLAGS="-L/home/asteiner/install/lib" ./configure -C \
    --prefix=/home/asteiner/install
    \endcode
    In this example, specifying
    <tt>-I/home/asteiner/install/include</tt> and
    <tt>-L/home/asteiner/install/lib</tt> above ensures that the GSL
    libraries can be found (this is where they are installed on my
    machine). The <tt>--prefix=/home/asteiner/install</tt> argument to
    <tt>./configure</tt> ensures that \o2 is installed there as well.

    For those users wanting to compile \o2 under Xcode on a Mac, some
    advice for doing this has been posted to the \c o2scl-help mailing
    list.

    The \o2 documentation is generated with \doxygen. In principle,
    the documentation can be regenerated by the end-user, but this is
    not supported and requires several external applications not
    included in the distribution.

    \b Un-installation: While there is no explicit "uninstall"
    makefile target, there are only a couple places to check.
    Installation creates directories named <tt>o2scl</tt> in the
    include, doc and shared files directory (which default to \c
    /usr/local/include, \c /usr/local/doc, and \c /usr/local/share)
    which can be removed. Finally, all of the libraries are named with
    the prefix \c libo2scl and are created by default in
    /usr/local/lib. As configured with the settings above, the files
    are in \c /home/asteiner/install/include/o2scl, \c
    /home/asteiner/install/lib, \c /home/asteiner/install/share/o2scl,
    and \c /home/asteiner/install/doc/o2scl.

    \latexonly
    \fussy
    \endlatexonly
*/
